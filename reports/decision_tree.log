Traceback (most recent call last):
  File "c:\pythonenvs\ml_venv\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\likyb\AppData\Local\Programs\Python\Python38\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "c:\pythonenvs\ml_venv\lib\site-packages\nbclient\client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
ram_prices = pd.read_csv("https://raw.githubusercontent.com/lihkir/Data/main/ram_price.csv")
plt.semilogy(ram_prices.date, ram_prices.price)
plt.xlabel("Year")
plt.ylabel("Price in $/Mbyte")
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mgaierror[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36mdo_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1353[0m             [1;32mtry[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1354[1;33m                 h.request(req.get_method(), req.selector, req.data, headers,
[0m[0;32m   1355[0m                           encode_chunked=req.has_header('Transfer-encoding'))

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36mrequest[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1251[0m         [1;34m"""Send a complete request to the server."""[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1252[1;33m         [0mself[0m[1;33m.[0m[0m_send_request[0m[1;33m([0m[0mmethod[0m[1;33m,[0m [0murl[0m[1;33m,[0m [0mbody[0m[1;33m,[0m [0mheaders[0m[1;33m,[0m [0mencode_chunked[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1253[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36m_send_request[1;34m(self, method, url, body, headers, encode_chunked)[0m
[0;32m   1297[0m             [0mbody[0m [1;33m=[0m [0m_encode[0m[1;33m([0m[0mbody[0m[1;33m,[0m [1;34m'body'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1298[1;33m         [0mself[0m[1;33m.[0m[0mendheaders[0m[1;33m([0m[0mbody[0m[1;33m,[0m [0mencode_chunked[0m[1;33m=[0m[0mencode_chunked[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1299[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36mendheaders[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1246[0m             [1;32mraise[0m [0mCannotSendHeader[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1247[1;33m         [0mself[0m[1;33m.[0m[0m_send_output[0m[1;33m([0m[0mmessage_body[0m[1;33m,[0m [0mencode_chunked[0m[1;33m=[0m[0mencode_chunked[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1248[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36m_send_output[1;34m(self, message_body, encode_chunked)[0m
[0;32m   1006[0m         [1;32mdel[0m [0mself[0m[1;33m.[0m[0m_buffer[0m[1;33m[[0m[1;33m:[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1007[1;33m         [0mself[0m[1;33m.[0m[0msend[0m[1;33m([0m[0mmsg[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1008[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36msend[1;34m(self, data)[0m
[0;32m    946[0m             [1;32mif[0m [0mself[0m[1;33m.[0m[0mauto_open[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 947[1;33m                 [0mself[0m[1;33m.[0m[0mconnect[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    948[0m             [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36mconnect[1;34m(self)[0m
[0;32m   1413[0m [1;33m[0m[0m
[1;32m-> 1414[1;33m             [0msuper[0m[1;33m([0m[1;33m)[0m[1;33m.[0m[0mconnect[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1415[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\http\client.py[0m in [0;36mconnect[1;34m(self)[0m
[0;32m    917[0m         [1;34m"""Connect to the host and port specified in __init__."""[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 918[1;33m         self.sock = self._create_connection(
[0m[0;32m    919[0m             (self.host,self.port), self.timeout, self.source_address)

[1;32m~\AppData\Local\Programs\Python\Python38\lib\socket.py[0m in [0;36mcreate_connection[1;34m(address, timeout, source_address)[0m
[0;32m    786[0m     [0merr[0m [1;33m=[0m [1;32mNone[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 787[1;33m     [1;32mfor[0m [0mres[0m [1;32min[0m [0mgetaddrinfo[0m[1;33m([0m[0mhost[0m[1;33m,[0m [0mport[0m[1;33m,[0m [1;36m0[0m[1;33m,[0m [0mSOCK_STREAM[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    788[0m         [0maf[0m[1;33m,[0m [0msocktype[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mcanonname[0m[1;33m,[0m [0msa[0m [1;33m=[0m [0mres[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\socket.py[0m in [0;36mgetaddrinfo[1;34m(host, port, family, type, proto, flags)[0m
[0;32m    917[0m     [0maddrlist[0m [1;33m=[0m [1;33m[[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 918[1;33m     [1;32mfor[0m [0mres[0m [1;32min[0m [0m_socket[0m[1;33m.[0m[0mgetaddrinfo[0m[1;33m([0m[0mhost[0m[1;33m,[0m [0mport[0m[1;33m,[0m [0mfamily[0m[1;33m,[0m [0mtype[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mflags[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    919[0m         [0maf[0m[1;33m,[0m [0msocktype[0m[1;33m,[0m [0mproto[0m[1;33m,[0m [0mcanonname[0m[1;33m,[0m [0msa[0m [1;33m=[0m [0mres[0m[1;33m[0m[1;33m[0m[0m

[1;31mgaierror[0m: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

[1;31mURLError[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_24768/3805201560.py[0m in [0;36m<module>[1;34m[0m
[0;32m      1[0m [1;32mimport[0m [0mpandas[0m [1;32mas[0m [0mpd[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 2[1;33m [0mram_prices[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_csv[0m[1;33m([0m[1;34m"https://raw.githubusercontent.com/lihkir/Data/main/ram_price.csv"[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      3[0m [0mplt[0m[1;33m.[0m[0msemilogy[0m[1;33m([0m[0mram_prices[0m[1;33m.[0m[0mdate[0m[1;33m,[0m [0mram_prices[0m[1;33m.[0m[0mprice[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m      4[0m [0mplt[0m[1;33m.[0m[0mxlabel[0m[1;33m([0m[1;34m"Year"[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m      5[0m [0mplt[0m[1;33m.[0m[0mylabel[0m[1;33m([0m[1;34m"Price in $/Mbyte"[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\util\_decorators.py[0m in [0;36mwrapper[1;34m(*args, **kwargs)[0m
[0;32m    309[0m                     [0mstacklevel[0m[1;33m=[0m[0mstacklevel[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    310[0m                 )
[1;32m--> 311[1;33m             [1;32mreturn[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    312[0m [1;33m[0m[0m
[0;32m    313[0m         [1;32mreturn[0m [0mwrapper[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\readers.py[0m in [0;36mread_csv[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)[0m
[0;32m    584[0m     [0mkwds[0m[1;33m.[0m[0mupdate[0m[1;33m([0m[0mkwds_defaults[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    585[0m [1;33m[0m[0m
[1;32m--> 586[1;33m     [1;32mreturn[0m [0m_read[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    587[0m [1;33m[0m[0m
[0;32m    588[0m [1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\readers.py[0m in [0;36m_read[1;34m(filepath_or_buffer, kwds)[0m
[0;32m    480[0m [1;33m[0m[0m
[0;32m    481[0m     [1;31m# Create the parser.[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 482[1;33m     [0mparser[0m [1;33m=[0m [0mTextFileReader[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [1;33m**[0m[0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    483[0m [1;33m[0m[0m
[0;32m    484[0m     [1;32mif[0m [0mchunksize[0m [1;32mor[0m [0miterator[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\readers.py[0m in [0;36m__init__[1;34m(self, f, engine, **kwds)[0m
[0;32m    809[0m             [0mself[0m[1;33m.[0m[0moptions[0m[1;33m[[0m[1;34m"has_index_names"[0m[1;33m][0m [1;33m=[0m [0mkwds[0m[1;33m[[0m[1;34m"has_index_names"[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[0;32m    810[0m [1;33m[0m[0m
[1;32m--> 811[1;33m         [0mself[0m[1;33m.[0m[0m_engine[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_make_engine[0m[1;33m([0m[0mself[0m[1;33m.[0m[0mengine[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    812[0m [1;33m[0m[0m
[0;32m    813[0m     [1;32mdef[0m [0mclose[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\readers.py[0m in [0;36m_make_engine[1;34m(self, engine)[0m
[0;32m   1038[0m             )
[0;32m   1039[0m         [1;31m# error: Too many arguments for "ParserBase"[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1040[1;33m         [1;32mreturn[0m [0mmapping[0m[1;33m[[0m[0mengine[0m[1;33m][0m[1;33m([0m[0mself[0m[1;33m.[0m[0mf[0m[1;33m,[0m [1;33m**[0m[0mself[0m[1;33m.[0m[0moptions[0m[1;33m)[0m  [1;31m# type: ignore[call-arg][0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1041[0m [1;33m[0m[0m
[0;32m   1042[0m     [1;32mdef[0m [0m_failover_to_python[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\c_parser_wrapper.py[0m in [0;36m__init__[1;34m(self, src, **kwds)[0m
[0;32m     49[0m [1;33m[0m[0m
[0;32m     50[0m         [1;31m# open handles[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 51[1;33m         [0mself[0m[1;33m.[0m[0m_open_handles[0m[1;33m([0m[0msrc[0m[1;33m,[0m [0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     52[0m         [1;32massert[0m [0mself[0m[1;33m.[0m[0mhandles[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m[0m[1;33m[0m[0m
[0;32m     53[0m [1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\parsers\base_parser.py[0m in [0;36m_open_handles[1;34m(self, src, kwds)[0m
[0;32m    220[0m         [0mLet[0m [0mthe[0m [0mreaders[0m [0mopen[0m [0mIOHandles[0m [0mafter[0m [0mthey[0m [0mare[0m [0mdone[0m [1;32mwith[0m [0mtheir[0m [0mpotential[0m [0mraises[0m[1;33m.[0m[1;33m[0m[1;33m[0m[0m
[0;32m    221[0m         """
[1;32m--> 222[1;33m         self.handles = get_handle(
[0m[0;32m    223[0m             [0msrc[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    224[0m             [1;34m"r"[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\common.py[0m in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    607[0m [1;33m[0m[0m
[0;32m    608[0m     [1;31m# open URLs[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 609[1;33m     ioargs = _get_filepath_or_buffer(
[0m[0;32m    610[0m         [0mpath_or_buf[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    611[0m         [0mencoding[0m[1;33m=[0m[0mencoding[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\common.py[0m in [0;36m_get_filepath_or_buffer[1;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[0;32m    310[0m         [1;31m# assuming storage_options is to be interpreted as headers[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m
[0;32m    311[0m         [0mreq_info[0m [1;33m=[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m.[0m[0mRequest[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mheaders[0m[1;33m=[0m[0mstorage_options[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 312[1;33m         [1;32mwith[0m [0murlopen[0m[1;33m([0m[0mreq_info[0m[1;33m)[0m [1;32mas[0m [0mreq[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    313[0m             [0mcontent_encoding[0m [1;33m=[0m [0mreq[0m[1;33m.[0m[0mheaders[0m[1;33m.[0m[0mget[0m[1;33m([0m[1;34m"Content-Encoding"[0m[1;33m,[0m [1;32mNone[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    314[0m             [1;32mif[0m [0mcontent_encoding[0m [1;33m==[0m [1;34m"gzip"[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32mC:\PythonEnvs\ml_venv\lib\site-packages\pandas\io\common.py[0m in [0;36murlopen[1;34m(*args, **kwargs)[0m
[0;32m    210[0m     [1;32mimport[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m[0m[1;33m[0m[0m
[0;32m    211[0m [1;33m[0m[0m
[1;32m--> 212[1;33m     [1;32mreturn[0m [0murllib[0m[1;33m.[0m[0mrequest[0m[1;33m.[0m[0murlopen[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    213[0m [1;33m[0m[0m
[0;32m    214[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36murlopen[1;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[0;32m    220[0m     [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    221[0m         [0mopener[0m [1;33m=[0m [0m_opener[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 222[1;33m     [1;32mreturn[0m [0mopener[0m[1;33m.[0m[0mopen[0m[1;33m([0m[0murl[0m[1;33m,[0m [0mdata[0m[1;33m,[0m [0mtimeout[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    223[0m [1;33m[0m[0m
[0;32m    224[0m [1;32mdef[0m [0minstall_opener[0m[1;33m([0m[0mopener[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36mopen[1;34m(self, fullurl, data, timeout)[0m
[0;32m    523[0m [1;33m[0m[0m
[0;32m    524[0m         [0msys[0m[1;33m.[0m[0maudit[0m[1;33m([0m[1;34m'urllib.Request'[0m[1;33m,[0m [0mreq[0m[1;33m.[0m[0mfull_url[0m[1;33m,[0m [0mreq[0m[1;33m.[0m[0mdata[0m[1;33m,[0m [0mreq[0m[1;33m.[0m[0mheaders[0m[1;33m,[0m [0mreq[0m[1;33m.[0m[0mget_method[0m[1;33m([0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 525[1;33m         [0mresponse[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_open[0m[1;33m([0m[0mreq[0m[1;33m,[0m [0mdata[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    526[0m [1;33m[0m[0m
[0;32m    527[0m         [1;31m# post-process response[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36m_open[1;34m(self, req, data)[0m
[0;32m    540[0m [1;33m[0m[0m
[0;32m    541[0m         [0mprotocol[0m [1;33m=[0m [0mreq[0m[1;33m.[0m[0mtype[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 542[1;33m         result = self._call_chain(self.handle_open, protocol, protocol +
[0m[0;32m    543[0m                                   '_open', req)
[0;32m    544[0m         [1;32mif[0m [0mresult[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36m_call_chain[1;34m(self, chain, kind, meth_name, *args)[0m
[0;32m    500[0m         [1;32mfor[0m [0mhandler[0m [1;32min[0m [0mhandlers[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    501[0m             [0mfunc[0m [1;33m=[0m [0mgetattr[0m[1;33m([0m[0mhandler[0m[1;33m,[0m [0mmeth_name[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 502[1;33m             [0mresult[0m [1;33m=[0m [0mfunc[0m[1;33m([0m[1;33m*[0m[0margs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    503[0m             [1;32mif[0m [0mresult[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    504[0m                 [1;32mreturn[0m [0mresult[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36mhttps_open[1;34m(self, req)[0m
[0;32m   1395[0m [1;33m[0m[0m
[0;32m   1396[0m         [1;32mdef[0m [0mhttps_open[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mreq[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1397[1;33m             return self.do_open(http.client.HTTPSConnection, req,
[0m[0;32m   1398[0m                 context=self._context, check_hostname=self._check_hostname)
[0;32m   1399[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python38\lib\urllib\request.py[0m in [0;36mdo_open[1;34m(self, http_class, req, **http_conn_args)[0m
[0;32m   1355[0m                           encode_chunked=req.has_header('Transfer-encoding'))
[0;32m   1356[0m             [1;32mexcept[0m [0mOSError[0m [1;32mas[0m [0merr[0m[1;33m:[0m [1;31m# timeout error[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1357[1;33m                 [1;32mraise[0m [0mURLError[0m[1;33m([0m[0merr[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1358[0m             [0mr[0m [1;33m=[0m [0mh[0m[1;33m.[0m[0mgetresponse[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1359[0m         [1;32mexcept[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;31mURLError[0m: <urlopen error [Errno 11001] getaddrinfo failed>
URLError: <urlopen error [Errno 11001] getaddrinfo failed>

